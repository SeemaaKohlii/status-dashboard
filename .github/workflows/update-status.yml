name: Update Status Dashboard

on:
  schedule:
    - cron: "0 * * * *"  # Runs every hour
  workflow_dispatch:      # Allows manual trigger

jobs:
  update-dashboard:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensures we have full commit history

      - name: Set Up Git Config
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "actions@github.com"

      - name: Debug Git Status
        run: |
          echo "Checking repository status before update..."
          git status
          git remote -v

      - name: Fetch Open Issues from GitHub API
        run: |
          echo "Fetching open issues from GitHub API..."
          RESPONSE=$(curl -s -H "Accept: application/vnd.github.v3+json" \
                          -H "Authorization: Bearer ${{ secrets.PAT_TOKEN }}" \
                          "https://api.github.com/repos/${{ github.repository }}/issues?state=open")

          echo "$RESPONSE" > issues_raw.json
          cat issues_raw.json  # Print raw API response for debugging

      - name: Process Issues Data
        run: |
          echo "Processing issues data using jq..."
          if jq empty issues_raw.json 2>/dev/null; then
            echo "Valid JSON detected. Parsing..."
            jq '[.[] | {title: .title, url: .html_url, created_at: .created_at}]' issues_raw.json > status.json
          else
            echo "Error: Invalid JSON response from API."
            exit 1  # Fails the workflow if API response is not valid JSON
          fi

      - name: Debug Processed JSON
        run: |
          echo "Checking processed JSON file..."
          cat status.json  # Print the final status.json output

      - name: Stash Local Changes (If Any)
        run: |
          if [[ -n $(git status --porcelain) ]]; then
            echo "Unstaged changes detected. Stashing..."
            git stash
          else
            echo "No changes to stash."
          fi

      - name: Pull Latest Changes from Main
        run: |
          echo "Pulling latest changes..."
          git pull origin main --rebase || (git rebase --abort && git pull --ff-only origin main)

      - name: Apply Stashed Changes (If Any)
        run: |
          if git stash list | grep -q "stash@{0}"; then
            echo "Applying stashed changes..."
            git stash pop || echo "Merge conflicts detected. Resolve manually."
          else
            echo "No stashed changes to apply."
          fi

      - name: Check If Changes Exist
        run: |
          if git diff --staged --quiet; then
            echo "No changes detected in status.json. Skipping commit."
            exit 0  # Exits without failing the workflow
          else
            echo "Changes detected. Preparing to commit."
          fi

      - name: Commit and Push Changes
        run: |
          git add status.json
          git commit -m "Updated issue list on $(date)"
          git push https://x-access-token:${{ secrets.PAT_TOKEN }}@github.com/${{ github.repository }}.git
